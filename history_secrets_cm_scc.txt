openssl-sess_id (1ssl) - SSL/TLS session handling utility
openssl-smime (1ssl) - S/MIME utility
openssl-speed (1ssl) - test library performance
openssl-spkac (1ssl) - SPKAC printing and generating utility
openssl-srp (1ssl)   - maintain SRP password file
openssl-storeutl (1ssl) - STORE utility
openssl-ts (1ssl)    - Time Stamping Authority tool (client/server)
openssl-verify (1ssl) - Utility to verify certificates
openssl-version (1ssl) - print OpenSSL version information
openssl-x509 (1ssl)  - Certificate display and signing utility
openssl.cnf (5ssl)   - OpenSSL CONF library configuration files
passphrase-encoding (7ssl) - How diverse parts of OpenSSL treat pass phrases character encoding
proxy-certificates (7ssl) - Proxy certificates in OpenSSL
ssl (7ssl)           - OpenSSL SSL/TLS library
version (1ssl)       - print OpenSSL version information
[student@workstation ~]$ ls
Desktop  DO180  Documents  Downloads  local  Music  Pictures  Public  Templates  Videos
[student@workstation ~]$ man openssl-req
[student@workstation ~]$ 
[student@workstation ~]$ openssl ogpeennrsssal  -goeuntr seax a-mopulte .ekxeaym p2l0e4.8key 2048
Invalid command 'ogpeennrsssal'; type "help" for a list.
[student@workstation ~]$ openssl genrsa -out example.key 2048
Generating RSA private key, 2048 bit long modulus (2 primes)
...........................................................................+++++
...................................................................................................................................................................................+++++
e is 65537 (0x010001)
[student@workstation ~]$ openssl req -new -key example.key -out example.csr
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [XX]:US
State or Province Name (full name) []:Raleeigh
Locality Name (eg, city) [Default City]:North Carolina
Organization Name (eg, company) [Default Company Ltd]:Kyndryl
Organizational Unit Name (eg, section) []:Redhattraining
Common Name (eg, your name or your server's hostname) []:sridhar
Email Address []:sridhar.nagaraj@kyndryl.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:Welcome@9535240007
An optional company name []:Redhat
[student@workstation ~]$ clear

[student@workstation ~]$ oc new-project projectxtreme
Now using project "projectxtreme" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname

[student@workstation ~]$ oc get all
No resources found in projectxtreme namespace.
[student@workstation ~]$ oc get sa
NAME       SECRETS   AGE
builder    2         18s
default    2         18s
deployer   2         18s
[student@workstation ~]$ oc new-app --name=secureapp1 --docker-image=quay.io/redhattraining/hello-world-nginx:v1.0
Flag --docker-image has been deprecated, Deprecated flag use --image
--> Found container image 44eaa13 (3 years old) from quay.io for "quay.io/redhattraining/hello-world-nginx:v1.0"

    Red Hat Universal Base Image 8 
    ------------------------------ 
    The Universal Base Image is designed and engineered to be the base layer for all of your containerized applications, middleware and utilities. This base image is freely redistributable, but Red Hat only supports Red Hat technologies through subscriptions for Red Hat products. This image is maintained by Red Hat and updated regularly.

    Tags: base rhel8

    * An image stream tag will be created as "secureapp1:v1.0" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "secureapp1" created
    deployment.apps "secureapp1" created
    service "secureapp1" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/secureapp1' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get all
NAME                              READY   STATUS    RESTARTS   AGE
pod/secureapp1-5b6c4567b6-xj927   1/1     Running   0          19s

NAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)    AGE
service/secureapp1   ClusterIP   172.30.132.212   <none>        8080/TCP   22s

NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/secureapp1   1/1     1            1           22s

NAME                                    DESIRED   CURRENT   READY   AGE
replicaset.apps/secureapp1-5b6c4567b6   1         1         1       19s
replicaset.apps/secureapp1-69849df7f7   0         0         0       22s

NAME                                        IMAGE REPOSITORY                                                            TAGS   UPDATED
imagestream.image.openshift.io/secureapp1   image-registry.openshift-image-registry.svc:5000/projectxtreme/secureapp1   v1.0   19 seconds ago
[student@workstation ~]$ oc exec -it pod/secureapp1-5b6c4567b6-xj927 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
bash-4.4$ curl localhost:8080
<html>
  <body>
    <h1>Hello, world from nginx!</h1>
  </body>
</html>
bash-4.4$ exit
exit
[student@workstation ~]$ oc expose svc/secureapp1
route.route.openshift.io/secureapp1 exposed
[student@workstation ~]$ oc get route
NAME         HOST/PORT                                        PATH   SERVICES     PORT       TERMINATION   WILDCARD
secureapp1   secureapp1-projectxtreme.apps.ocp4.example.com          secureapp1   8080-tcp                 None
[student@workstation ~]$ curl secureapp1-projectxtreme.apps.ocp4.example.com
<html>
  <body>
    <h1>Hello, world from nginx!</h1>
  </body>
</html>
[student@workstation ~]$ oc create secret generic app-secret --from-literal=MESSAGE=Hello
secret/app-secret created
[student@workstation ~]$ oc get secret
NAME                       TYPE                                  DATA   AGE
app-secret                 Opaque                                1      10s
builder-dockercfg-wmbmh    kubernetes.io/dockercfg               1      9m3s
builder-token-672zr        kubernetes.io/service-account-token   4      9m3s
builder-token-zkczk        kubernetes.io/service-account-token   4      9m3s
default-dockercfg-v5wf9    kubernetes.io/dockercfg               1      9m3s
default-token-wttk2        kubernetes.io/service-account-token   4      9m3s
default-token-xwnkq        kubernetes.io/service-account-token   4      9m3s
deployer-dockercfg-hbcms   kubernetes.io/dockercfg               1      9m3s
deployer-token-pgq9d       kubernetes.io/service-account-token   4      9m3s
deployer-token-qkwll       kubernetes.io/service-account-token   4      9m3s
[student@workstation ~]$ oc get secret/app-secret -o yaml
apiVersion: v1
data:
  MESSAGE: SGVsbG8=
kind: Secret
metadata:
  creationTimestamp: "2022-12-29T08:50:25Z"
  name: app-secret
  namespace: projectxtreme
  resourceVersion: "607179"
  uid: cf529095-d0e8-44aa-a4dc-5bf99902579c
type: Opaque
[student@workstation ~]$ echo "SGVsbG8=" | base64 -d 
Hello[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get cm
NAME                       DATA   AGE
kube-root-ca.crt           1      10m
openshift-service-ca.crt   1      10m
[student@workstation ~]$ 
[student@workstation ~]$ oc create cm myappconfig --from-literal=KEY2=VALUE2
configmap/myappconfig created
[student@workstation ~]$ oc get cm
NAME                       DATA   AGE
kube-root-ca.crt           1      13m
myappconfig                1      8s
openshift-service-ca.crt   1      13m
[student@workstation ~]$ oc get cm/myappconfig -o yaml  
apiVersion: v1
data:
  KEY2: VALUE2
kind: ConfigMap
metadata:
  creationTimestamp: "2022-12-29T08:54:32Z"
  name: myappconfig
  namespace: projectxtreme
  resourceVersion: "608424"
  uid: 3ce5baa0-932d-4e28-8b84-0982af44870a
[student@workstation ~]$ oc get deployment
NAME         READY   UP-TO-DATE   AVAILABLE   AGE
secureapp1   1/1     1            1           12m
[student@workstation ~]$ oc describe deployment secureapp1
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 2
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:        quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:         8080/TCP
    Host Port:    0/TCP
    Environment:  <none>
    Mounts:       <none>
  Volumes:        <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-5b6c4567b6 (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  12m   deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  12m   deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  12m   deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
[student@workstation ~]$ oc set env -h
Update environment variables on a pod template or a build config.

 List environment variable definitions in one or more pods, pod templates or
build configuration. Add, update, or remove container environment variable
definitions in one or more pod templates (within replication controllers or
deployment configurations) or build configurations. View or modify the
environment variable definitions on all containers in the specified pods or pod
templates, or just those that match a wildcard.

 If "--env -" is passed, environment variables can be read from STDIN using the
standard env syntax.

Usage:
  oc set env RESOURCE/NAME KEY_1=VAL_1 ... KEY_N=VAL_N [flags]

Examples:
  # Update deployment config 'myapp' with a new environment variable
  oc set env dc/myapp STORAGE_DIR=/local
  
  # List the environment variables defined on a build config 'sample-build'
  oc set env bc/sample-build --list
  
  # List the environment variables defined on all pods
  oc set env pods --all --list
  
  # Output modified build config in YAML
  oc set env bc/sample-build STORAGE_DIR=/data -o yaml
  
  # Update all containers in all replication controllers in the project to have
ENV=prod
  oc set env rc --all ENV=prod
  
  # Import environment from a secret
  oc set env --from=secret/mysecret dc/myapp
  
  # Import environment from a config map with a prefix
  oc set env --from=configmap/myconfigmap --prefix=MYSQL_ dc/myapp
  
  # Remove the environment variable ENV from container 'c1' in all deployment
configs
  oc set env dc --all --containers="c1" ENV-
  
  # Remove the environment variable ENV from a deployment config definition on
disk and
  # update the deployment config on the server
  oc set env -f dc.json ENV-
  
  # Set some of the local shell environment into a deployment config on the
server
  oc set env | grep RAILS_ | oc env -e - dc/myapp

Options:
      --all=false: If true, select all resources in the namespace of the
specified resource types
      --allow-missing-template-keys=true: If true, ignore any errors in
templates when a field or map key is missing in the template. Only applies to
golang and jsonpath output formats.
  -c, --containers='*': The names of containers in the selected pod templates to
change - may use wildcards
      --dry-run='none': Must be "none", "server", or "client". If client
strategy, only print the object that would be sent, without sending it. If
server strategy, submit server-side request without persisting the resource.
  -e, --env=[]: Specify a key-value pair for an environment variable to set into
each container.
      --field-manager='kubectl-set': Name of the manager used to track field
ownership.
  -f, --filename=[]: Filename, directory, or URL to files to use to edit the
resource
      --from='': The name of a resource from which to inject environment
variables
  -k, --kustomize='': Process the kustomization directory. This flag can't be
used together with -f or -R.
      --list=false: If true, display the environment and any changes in the
standard format
      --local=false: If true, set image will NOT contact api-server but run
locally.
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
      --overwrite=true: If true, allow environment to be overwritten, otherwise
reject updates that overwrite existing environment.
      --prefix='': Prefix to append to variable names
  -R, --recursive=false: Process the directory used in -f, --filename
recursively. Useful when you want to manage related manifests organized within
the same directory.
      --resolve=false: If true, show secret or configmap references when listing
variables
      --resource-version='': If non-empty, the labels update will only succeed
if this is the current resource-version for the object. Only valid when
specifying a single resource.
  -l, --selector='': Selector (label query) to filter on
      --show-managed-fields=false: If true, keep the managedFields when printing
objects in JSON or YAML format.
      --template='': Template string or path to template file to use when
-o=go-template, -o=go-template-file. The template format is golang templates
[http://golang.org/pkg/text/template/#pkg-overview].

Use "oc options" for a list of global command-line options (applies to all
commands).
[student@workstation ~]$ oc get deployment, secret, cm
error: arguments in resource/name form must have a single resource and name
[student@workstation ~]$ oc get deployment,secret,cm
NAME                         READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/secureapp1   1/1     1            1           17m

NAME                              TYPE                                  DATA   AGE
secret/app-secret                 Opaque                                1      10m
secret/builder-dockercfg-wmbmh    kubernetes.io/dockercfg               1      19m
secret/builder-token-672zr        kubernetes.io/service-account-token   4      19m
secret/builder-token-zkczk        kubernetes.io/service-account-token   4      19m
secret/default-dockercfg-v5wf9    kubernetes.io/dockercfg               1      19m
secret/default-token-wttk2        kubernetes.io/service-account-token   4      19m
secret/default-token-xwnkq        kubernetes.io/service-account-token   4      19m
secret/deployer-dockercfg-hbcms   kubernetes.io/dockercfg               1      19m
secret/deployer-token-pgq9d       kubernetes.io/service-account-token   4      19m
secret/deployer-token-qkwll       kubernetes.io/service-account-token   4      19m

NAME                                 DATA   AGE
configmap/kube-root-ca.crt           1      19m
configmap/myappconfig                1      6m45s
configmap/openshift-service-ca.crt   1      19m
[student@workstation ~]$ # oc set env deployment/secureapp1 --from=secret/app-secret 
[student@workstation ~]$ oc get pods 
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-5b6c4567b6-xj927   1/1     Running   0          18m
[student@workstation ~]$ oc set env deployment/secureapp1 --from=secret/app-secret 
deployment.apps/secureapp1 updated
[student@workstation ~]$ oc get pods 
NAME                          READY   STATUS              RESTARTS   AGE
secureapp1-5b6c4567b6-xj927   1/1     Running             0          19m
secureapp1-5f86b75dc5-9smgs   0/1     ContainerCreating   0          2s
[student@workstation ~]$ oc get pods -w
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-5f86b75dc5-9smgs   1/1     Running   0          12s
[student@workstation ~]$ oc describe deployment secureapp1
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 3
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:      quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:       8080/TCP
    Host Port:  0/TCP
    Environment:
      MESSAGE:  <set to the key 'MESSAGE' in secret 'app-secret'>  Optional: false
    Mounts:     <none>
  Volumes:      <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-5f86b75dc5 (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  19m   deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  19m   deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  19m   deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
  Normal  ScalingReplicaSet  23s   deployment-controller  Scaled up replica set secureapp1-5f86b75dc5 to 1
  Normal  ScalingReplicaSet  20s   deployment-controller  Scaled down replica set secureapp1-5b6c4567b6 to 0
[student@workstation ~]$ oc get pods 
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-5f86b75dc5-9smgs   1/1     Running   0          41s
[student@workstation ~]$ oc exec secureapp1-5f86b75dc5-9smgs -- env | grep MESSAGE
MESSAGE=Hello
[student@workstation ~]$ oc set env deployment/secureapp1 --from=configmap/myappconfig 
deployment.apps/secureapp1 updated
[student@workstation ~]$ oc get pod
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-7cb65b8f54-xrbrh   1/1     Running   0          6s
[student@workstation ~]$ oc describe deployment secureapp1
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 4
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:      quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:       8080/TCP
    Host Port:  0/TCP
    Environment:
      MESSAGE:  <set to the key 'MESSAGE' in secret 'app-secret'>    Optional: false
      KEY2:     <set to the key 'KEY2' of config map 'myappconfig'>  Optional: false
    Mounts:     <none>
  Volumes:      <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-7cb65b8f54 (1/1 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  22m    deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  22m    deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  21m    deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
  Normal  ScalingReplicaSet  3m2s   deployment-controller  Scaled up replica set secureapp1-5f86b75dc5 to 1
  Normal  ScalingReplicaSet  2m59s  deployment-controller  Scaled down replica set secureapp1-5b6c4567b6 to 0
  Normal  ScalingReplicaSet  34s    deployment-controller  Scaled up replica set secureapp1-7cb65b8f54 to 1
  Normal  ScalingReplicaSet  31s    deployment-controller  Scaled down replica set secureapp1-5f86b75dc5 to 0
[student@workstation ~]$ oc exec secureapp1-7cb65b8f54-xrbrh -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
TERM=xterm
HOSTNAME=secureapp1-7cb65b8f54-xrbrh
NSS_SDB_USE_CACHE=no
KEY2=VALUE2
MESSAGE=Hello
SECUREAPP1_PORT_8080_TCP_PORT=8080
KUBERNETES_PORT=tcp://172.30.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
SECUREAPP1_SERVICE_PORT=8080
SECUREAPP1_SERVICE_PORT_8080_TCP=8080
KUBERNETES_SERVICE_HOST=172.30.0.1
SECUREAPP1_PORT=tcp://172.30.132.212:8080
SECUREAPP1_PORT_8080_TCP=tcp://172.30.132.212:8080
SECUREAPP1_PORT_8080_TCP_ADDR=172.30.132.212
SECUREAPP1_SERVICE_HOST=172.30.132.212
SECUREAPP1_PORT_8080_TCP_PROTO=tcp
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://172.30.0.1:443
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=172.30.0.1
KUBERNETES_SERVICE_PORT=443
container=oci
HOME=/
[student@workstation ~]$ oc edit deployment/secureapp1
Edit cancelled, no changes made.
[student@workstation ~]$ oc describe deployment
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 4
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:      quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:       8080/TCP
    Host Port:  0/TCP
    Environment:
      MESSAGE:  <set to the key 'MESSAGE' in secret 'app-secret'>    Optional: false
      KEY2:     <set to the key 'KEY2' of config map 'myappconfig'>  Optional: false
    Mounts:     <none>
  Volumes:      <none>
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-7cb65b8f54 (1/1 replicas created)
Events:
  Type    Reason             Age    From                   Message
  ----    ------             ----   ----                   -------
  Normal  ScalingReplicaSet  25m    deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  25m    deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  25m    deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
  Normal  ScalingReplicaSet  6m54s  deployment-controller  Scaled up replica set secureapp1-5f86b75dc5 to 1
  Normal  ScalingReplicaSet  6m51s  deployment-controller  Scaled down replica set secureapp1-5b6c4567b6 to 0
  Normal  ScalingReplicaSet  4m26s  deployment-controller  Scaled up replica set secureapp1-7cb65b8f54 to 1
  Normal  ScalingReplicaSet  4m23s  deployment-controller  Scaled down replica set secureapp1-5f86b75dc5 to 0
[student@workstation ~]$ oc set volume -h 
Update volumes on a pod template.

 This command can add, update or remove volumes from containers for any object
that has a pod template (deployment configs, replication controllers, or pods).
You can list volumes in pod or any object that has a pod template. You can
specify a single object or multiple, and alter volumes on all containers or just
those that match a given name.

 If you alter a volume setting on a deployment config, a deployment will be
triggered. Changing a replication controller will not affect running pods, and
you cannot change a pod's volumes once it has been created.

 Volume types include:

  *  emptydir (empty directory) default : A directory allocated when the pod is
created on a local host, is removed when the pod is deleted and is not copied
across servers
  *  hostdir (host directory): A directory with specific path on any host
(requires elevated privileges)
  *  persistentvolumeclaim or pvc (persistent volume claim): Link the volume
directory in the container to a persistent volume claim you have allocated by
name - a persistent volume claim is a request to allocate storage. Note that if
your claim hasn't been bound, your pods will not start.
  *  secret (mounted secret): Secret volumes mount a named secret to the
provided directory.

 For descriptions on other volume types, see https://docs.openshift.com

Aliases:
volumes, volume

Usage:
  oc set volumes RESOURCE/NAME --add|--remove [flags]

Examples:
  # List volumes defined on all deployment configs in the current project
  oc set volume dc --all
  
  # Add a new empty dir volume to deployment config (dc) 'myapp' mounted under
  # /var/lib/myapp
  oc set volume dc/myapp --add --mount-path=/var/lib/myapp
  
  # Use an existing persistent volume claim (pvc) to overwrite an existing
volume 'v1'
  oc set volume dc/myapp --add --name=v1 -t pvc --claim-name=pvc1 --overwrite
  
  # Remove volume 'v1' from deployment config 'myapp'
  oc set volume dc/myapp --remove --name=v1
  
  # Create a new persistent volume claim that overwrites an existing volume 'v1'
  oc set volume dc/myapp --add --name=v1 -t pvc --claim-size=1G --overwrite
  
  # Change the mount point for volume 'v1' to /data
  oc set volume dc/myapp --add --name=v1 -m /data --overwrite
  
  # Modify the deployment config by removing volume mount "v1" from container
"c1"
  # (and by removing the volume "v1" if no other containers have volume mounts
that reference it)
  oc set volume dc/myapp --remove --name=v1 --containers=c1
  
  # Add new volume based on a more complex volume source (AWS EBS, GCE PD,
  # Ceph, Gluster, NFS, ISCSI, ...)
  oc set volume dc/myapp --add -m /data --source=<json-string>

Options:
      --add=false: If true, add volume and/or volume mounts for containers
      --all=false: If true, select all resources in the namespace of the
specified resource types
      --allow-missing-template-keys=true: If true, ignore any errors in
templates when a field or map key is missing in the template. Only applies to
golang and jsonpath output formats.
      --claim-class='': StorageClass to use for the persistent volume claim
      --claim-mode='ReadWriteOnce': Set the access mode of the claim to be
created. Valid values are ReadWriteOnce (rwo), ReadWriteMany (rwm), or
ReadOnlyMany (rom)
      --claim-name='': Persistent volume claim name. Must be provided for
persistentVolumeClaim volume type
      --claim-size='': If specified along with a persistent volume type, create
a new claim with the given size in bytes. Accepts SI notation: 10, 10G, 10Gi
      --configmap-name='': Name of the persisted config map. Must be provided
for configmap volume type
      --confirm=false: If true, confirm that you really want to remove multiple
volumes
  -c, --containers='*': The names of containers in the selected pod templates to
change - may use wildcards
      --default-mode='': The default mode bits to create files with. Can be
between 0000 and 0777. Defaults to 0644.
      --dry-run='none': Must be "none", "server", or "client". If client
strategy, only print the object that would be sent, without sending it. If
server strategy, submit server-side request without persisting the resource.
      --field-manager='kubectl-set': Name of the manager used to track field
ownership.
  -f, --filename=[]: Filename, directory, or URL to files to use to edit the
resource
  -k, --kustomize='': Process the kustomization directory. This flag can't be
used together with -f or -R.
      --local=false: If true, set image will NOT contact api-server but run
locally.
  -m, --mount-path='': Mount path inside the container. Optional param for --add
or --remove
      --name='': Name of the volume. If empty, auto generated for add operation
  -o, --output='': Output format. One of:
json|yaml|name|go-template|go-template-file|template|templatefile|jsonpath|jsonpath-as-json|jsonpath-file.
      --overwrite=false: If true, replace existing volume source with the
provided name and/or volume mount for the given resource
      --path='': Host path. Must be provided for hostPath volume type
      --read-only=false: Mount volume as ReadOnly. Optional param for --add or
--remove
  -R, --recursive=false: Process the directory used in -f, --filename
recursively. Useful when you want to manage related manifests organized within
the same directory.
      --remove=false: If true, remove volume and/or volume mounts for containers
      --secret-name='': Name of the persisted secret. Must be provided for
secret volume type
  -l, --selector='': Selector (label query) to filter on
      --show-managed-fields=false: If true, keep the managedFields when printing
objects in JSON or YAML format.
      --source='': Details of volume source as json string. This can be used if
the required volume type is not supported by --type option. (e.g.: '{"nfs":
{"path": "/tmp","server":"172.17.0.2"}}')
      --sub-path='': Path within the local volume from which the container's
volume should be mounted. Optional param for --add or --remove
      --template='': Template string or path to template file to use when
-o=go-template, -o=go-template-file. The template format is golang templates
[http://golang.org/pkg/text/template/#pkg-overview].
  -t, --type='': Type of the volume source for add operation. Supported options:
emptyDir, hostPath, secret, configmap, persistentVolumeClaim

Use "oc options" for a list of global command-line options (applies to all
commands).
[student@workstation ~]$ 
[student@workstation ~]$ oc get secret/app-secret 
NAME         TYPE     DATA   AGE
app-secret   Opaque   1      23m
[student@workstation ~]$ 
[student@workstation ~]$ oc get cm 
NAME                       DATA   AGE
kube-root-ca.crt           1      32m
myappconfig                1      19m
openshift-service-ca.crt   1      32m
[student@workstation ~]$ oc set volume deployment/secureapp1 --add --type=secret --secret-name=app-secret --mount-path=/app-secret 
info: Generated volume name: volume-xtvd2
deployment.apps/secureapp1 volume updated
[student@workstation ~]$ oc get pods
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-767b4589f9-p5wpc   1/1     Running   0          11s
[student@workstation ~]$ oc describe deployment
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 5
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:      quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:       8080/TCP
    Host Port:  0/TCP
    Environment:
      MESSAGE:  <set to the key 'MESSAGE' in secret 'app-secret'>    Optional: false
      KEY2:     <set to the key 'KEY2' of config map 'myappconfig'>  Optional: false
    Mounts:
      /app-secret from volume-xtvd2 (rw)
  Volumes:
   volume-xtvd2:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  app-secret
    Optional:    false
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-767b4589f9 (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  32m   deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  32m   deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  32m   deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
  Normal  ScalingReplicaSet  13m   deployment-controller  Scaled up replica set secureapp1-5f86b75dc5 to 1
  Normal  ScalingReplicaSet  13m   deployment-controller  Scaled down replica set secureapp1-5b6c4567b6 to 0
  Normal  ScalingReplicaSet  11m   deployment-controller  Scaled up replica set secureapp1-7cb65b8f54 to 1
  Normal  ScalingReplicaSet  11m   deployment-controller  Scaled down replica set secureapp1-5f86b75dc5 to 0
  Normal  ScalingReplicaSet  20s   deployment-controller  Scaled up replica set secureapp1-767b4589f9 to 1
  Normal  ScalingReplicaSet  17s   deployment-controller  Scaled down replica set secureapp1-7cb65b8f54 to 0
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get pods
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-767b4589f9-p5wpc   1/1     Running   0          53s
[student@workstation ~]$ oc get deployment
NAME         READY   UP-TO-DATE   AVAILABLE   AGE
secureapp1   1/1     1            1           33m
[student@workstation ~]$ 
[student@workstation ~]$ oc exec deployment/secureapp1
error: you must specify at least one command for the container
[student@workstation ~]$ oc exec deployment/secureapp1 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
[student@workstation ~]$ oc exec -it deployment/secureapp1 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
bash-4.4$ env | grep -E 'MESSAGE|KEY'
KEY2=VALUE2
MESSAGE=Hello
bash-4.4$ 
bash-4.4$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
overlay          40G   14G   27G  34% /
tmpfs            64M     0   64M   0% /dev
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
shm              64M     0   64M   0% /dev/shm
tmpfs           7.9G   54M  7.8G   1% /etc/passwd
tmpfs            15G  4.0K   15G   1% /app-secret
/dev/vda4        40G   14G   27G  34% /etc/hosts
tmpfs            15G   24K   15G   1% /run/secrets/kubernetes.io/serviceaccount
tmpfs           7.9G     0  7.9G   0% /proc/acpi
tmpfs           7.9G     0  7.9G   0% /proc/scsi
tmpfs           7.9G     0  7.9G   0% /sys/firmware
bash-4.4$ ls /app-secret 
MESSAGE
bash-4.4$ cat /app-secret/MESSAGE 
Hellobash-4.4$ 
bash-4.4$ 
bash-4.4$ 
bash-4.4$ exit
exit
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc set volume deployment/secureapp1 --add --name=myconfigvol --type=configmap --configmap-name=myappconfig --mount-path=/some-config 
deployment.apps/secureapp1 volume updated
[student@workstation ~]$ oc get pods 
NAME                          READY   STATUS    RESTARTS   AGE
secureapp1-7bfb9b9b68-7zj8b   1/1     Running   0          5s
[student@workstation ~]$ oc describe deployment
Name:                   secureapp1
Namespace:              projectxtreme
CreationTimestamp:      Thu, 29 Dec 2022 03:43:35 -0500
Labels:                 app=secureapp1
                        app.kubernetes.io/component=secureapp1
                        app.kubernetes.io/instance=secureapp1
Annotations:            deployment.kubernetes.io/revision: 6
                        image.openshift.io/triggers:
                          [{"from":{"kind":"ImageStreamTag","name":"secureapp1:v1.0"},"fieldPath":"spec.template.spec.containers[?(@.name==\"secureapp1\")].image"}]
                        openshift.io/generated-by: OpenShiftNewApp
Selector:               deployment=secureapp1
Replicas:               1 desired | 1 updated | 1 total | 1 available | 0 unavailable
StrategyType:           RollingUpdate
MinReadySeconds:        0
RollingUpdateStrategy:  25% max unavailable, 25% max surge
Pod Template:
  Labels:       deployment=secureapp1
  Annotations:  openshift.io/generated-by: OpenShiftNewApp
  Containers:
   secureapp1:
    Image:      quay.io/redhattraining/hello-world-nginx@sha256:941928d702a2f08c986017b1eed3417d83952f05de55d657787512e82714dd89
    Port:       8080/TCP
    Host Port:  0/TCP
    Environment:
      MESSAGE:  <set to the key 'MESSAGE' in secret 'app-secret'>    Optional: false
      KEY2:     <set to the key 'KEY2' of config map 'myappconfig'>  Optional: false
    Mounts:
      /app-secret from volume-xtvd2 (rw)
      /some-config from myconfigvol (rw)
  Volumes:
   volume-xtvd2:
    Type:        Secret (a volume populated by a Secret)
    SecretName:  app-secret
    Optional:    false
   myconfigvol:
    Type:      ConfigMap (a volume populated by a ConfigMap)
    Name:      myappconfig
    Optional:  false
Conditions:
  Type           Status  Reason
  ----           ------  ------
  Available      True    MinimumReplicasAvailable
  Progressing    True    NewReplicaSetAvailable
OldReplicaSets:  <none>
NewReplicaSet:   secureapp1-7bfb9b9b68 (1/1 replicas created)
Events:
  Type    Reason             Age   From                   Message
  ----    ------             ----  ----                   -------
  Normal  ScalingReplicaSet  36m   deployment-controller  Scaled up replica set secureapp1-69849df7f7 to 1
  Normal  ScalingReplicaSet  36m   deployment-controller  Scaled up replica set secureapp1-5b6c4567b6 to 1
  Normal  ScalingReplicaSet  36m   deployment-controller  Scaled down replica set secureapp1-69849df7f7 to 0
  Normal  ScalingReplicaSet  17m   deployment-controller  Scaled up replica set secureapp1-5f86b75dc5 to 1
  Normal  ScalingReplicaSet  17m   deployment-controller  Scaled down replica set secureapp1-5b6c4567b6 to 0
  Normal  ScalingReplicaSet  14m   deployment-controller  Scaled up replica set secureapp1-7cb65b8f54 to 1
  Normal  ScalingReplicaSet  14m   deployment-controller  Scaled down replica set secureapp1-5f86b75dc5 to 0
  Normal  ScalingReplicaSet  4m9s  deployment-controller  Scaled up replica set secureapp1-767b4589f9 to 1
  Normal  ScalingReplicaSet  4m6s  deployment-controller  Scaled down replica set secureapp1-7cb65b8f54 to 0
  Normal  ScalingReplicaSet  10s   deployment-controller  Scaled up replica set secureapp1-7bfb9b9b68 to 1
  Normal  ScalingReplicaSet  7s    deployment-controller  Scaled down replica set secureapp1-767b4589f9 to 0
[student@workstation ~]$ 
[student@workstation ~]$ oc exec -it deployment/secureapp1 /bin/bash
kubectl exec [POD] [COMMAND] is DEPRECATED and will be removed in a future version. Use kubectl exec [POD] -- [COMMAND] instead.
bash-4.4$ env | grep -E 'MESSAGE|KEY'
KEY2=VALUE2
MESSAGE=Hello
bash-4.4$ 
bash-4.4$ 
bash-4.4$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
overlay          40G   14G   27G  34% /
tmpfs            64M     0   64M   0% /dev
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
shm              64M     0   64M   0% /dev/shm
tmpfs           7.9G   54M  7.8G   1% /etc/passwd
tmpfs            15G  4.0K   15G   1% /app-secret
/dev/vda4        40G   14G   27G  34% /etc/hosts
tmpfs            15G   24K   15G   1% /run/secrets/kubernetes.io/serviceaccount
tmpfs           7.9G     0  7.9G   0% /proc/acpi
tmpfs           7.9G     0  7.9G   0% /proc/scsi
tmpfs           7.9G     0  7.9G   0% /sys/firmware
bash-4.4$ 
bash-4.4$ 
bash-4.4$ ls -l /some-config/
total 0
lrwxrwxrwx. 1 root 1000740000 11 Dec 29 09:19 KEY2 -> ..data/KEY2
bash-4.4$ cat /some-config/KEY2 
VALUE2bash-4.4$ 
bash-4.4$ 
bash-4.4$ 
bash-4.4$ df -h 
Filesystem      Size  Used Avail Use% Mounted on
overlay          40G   14G   27G  34% /
tmpfs            64M     0   64M   0% /dev
tmpfs           7.9G     0  7.9G   0% /sys/fs/cgroup
shm              64M     0   64M   0% /dev/shm
tmpfs           7.9G   54M  7.8G   1% /etc/passwd
tmpfs            15G  4.0K   15G   1% /app-secret
/dev/vda4        40G   14G   27G  34% /etc/hosts
tmpfs            15G   24K   15G   1% /run/secrets/kubernetes.io/serviceaccount
tmpfs           7.9G     0  7.9G   0% /proc/acpi
tmpfs           7.9G     0  7.9G   0% /proc/scsi
tmpfs           7.9G     0  7.9G   0% /sys/firmware
bash-4.4$ exit
exit
[student@workstation ~]$ oc edit deployment/secureapp1
Edit cancelled, no changes made.
[student@workstation ~]$ oc get cm 
NAME                       DATA   AGE
kube-root-ca.crt           1      44m
myappconfig                1      31m
openshift-service-ca.crt   1      44m
[student@workstation ~]$ 
[student@workstation ~]$ oc login -u developer -p developer 
Login successful.

You don't have any projects. You can try to create a new project, by running

    oc new-project <projectname>

[student@workstation ~]$ oc new-project sscdemo
Now using project "sscdemo" on server "https://api.ocp4.example.com:6443".

You can add applications to this project with the 'new-app' command. For example, try:

    oc new-app rails-postgresql-example

to build a new example application in Ruby. Or use kubectl to deploy a simple Kubernetes application:

    kubectl create deployment hello-node --image=k8s.gcr.io/e2e-test-images/agnhost:2.33 -- /agnhost serve-hostname

[student@workstation ~]$ oc new-app --docker-image=docker.io/nginx:latest
Flag --docker-image has been deprecated, Deprecated flag use --image
--> Found container image 1403e55 (7 days old) from docker.io for "docker.io/nginx:latest"

    * An image stream tag will be created as "nginx:latest" that will track this image

--> Creating resources ...
    imagestream.image.openshift.io "nginx" created
    deployment.apps "nginx" created
    service "nginx" created
--> Success
    Application is not exposed. You can expose services to the outside world by executing one or more of the commands below:
     'oc expose service/nginx' 
    Run 'oc status' to view your app.
[student@workstation ~]$ oc get status
error: the server doesn't have a resource type "status"
[student@workstation ~]$ oc get
You must specify the type of resource to get. Use "oc api-resources" for a complete list of supported resources.

error: Required resource not specified.
Use "oc explain <resource>" for a detailed description of that resource (e.g. oc explain pods).
See 'oc get -h' for help and examples
[student@workstation ~]$ oc get all
NAME                         READY   STATUS   RESTARTS      AGE
pod/nginx-6cb5cff86c-4zfxp   0/1     Error    2 (20s ago)   29s

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
service/nginx   ClusterIP   172.30.227.201   <none>        80/TCP    30s

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx   0/1     1            0           30s

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-56b95959b7   1         0         0       30s
replicaset.apps/nginx-6cb5cff86c   1         1         0       29s

NAME                                   IMAGE REPOSITORY                                                 TAGS     UPDATED
imagestream.image.openshift.io/nginx   image-registry.openshift-image-registry.svc:5000/sscdemo/nginx   latest   29 seconds ago
[student@workstation ~]$ oc get all
NAME                         READY   STATUS   RESTARTS      AGE
pod/nginx-6cb5cff86c-4zfxp   0/1     Error    3 (35s ago)   58s

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
service/nginx   ClusterIP   172.30.227.201   <none>        80/TCP    59s

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx   0/1     1            0           59s

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-56b95959b7   0         0         0       59s
replicaset.apps/nginx-6cb5cff86c   1         1         0       58s

NAME                                   IMAGE REPOSITORY                                                 TAGS     UPDATED
imagestream.image.openshift.io/nginx   image-registry.openshift-image-registry.svc:5000/sscdemo/nginx   latest   58 seconds ago
[student@workstation ~]$ oc logs nginx-6cb5cff86c-4zfxp 
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: can not modify /etc/nginx/conf.d/default.conf (read-only file system?)
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2022/12/29 09:34:28 [warn] 1#1: the "user" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2
nginx: [warn] the "user" directive makes sense only if the master process runs with super-user privileges, ignored in /etc/nginx/nginx.conf:2
2022/12/29 09:34:28 [emerg] 1#1: mkdir() "/var/cache/nginx/client_temp" failed (13: Permission denied)
nginx: [emerg] mkdir() "/var/cache/nginx/client_temp" failed (13: Permission denied)
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ # In kubernetes, PSP (Pod Security Policy)
[student@workstation ~]$ # In openShift, Security Context Constraints (SCC)
[student@workstation ~]$ oc get scc
Error from server (Forbidden): securitycontextconstraints.security.openshift.io is forbidden: User "developer" cannot list resource "securitycontextconstraints" in API group "security.openshift.io" at the cluster scope
[student@workstation ~]$ oc login -u admin -p redhat 
Login successful.

You have access to 74 projects, the list has been suppressed. You can list all projects with 'oc projects'

Using project "sscdemo".
[student@workstation ~]$ oc get scc
NAME                              PRIV    CAPS         SELINUX     RUNASUSER          FSGROUP     SUPGROUP    PRIORITY     READONLYROOTFS   VOLUMES
anyuid                            false   <no value>   MustRunAs   RunAsAny           RunAsAny    RunAsAny    10           false            ["configMap","downwardAPI","emptyDir","persistentVolumeClaim","projected","secret"]
hostaccess                        false   <no value>   MustRunAs   MustRunAsRange     MustRunAs   RunAsAny    <no value>   false            ["configMap","downwardAPI","emptyDir","hostPath","persistentVolumeClaim","projected","secret"]
hostmount-anyuid                  false   <no value>   MustRunAs   RunAsAny           RunAsAny    RunAsAny    <no value>   false            ["configMap","downwardAPI","emptyDir","hostPath","nfs","persistentVolumeClaim","projected","secret"]
hostnetwork                       false   <no value>   MustRunAs   MustRunAsRange     MustRunAs   MustRunAs   <no value>   false            ["configMap","downwardAPI","emptyDir","persistentVolumeClaim","projected","secret"]
machine-api-termination-handler   false   <no value>   MustRunAs   RunAsAny           MustRunAs   MustRunAs   <no value>   false            ["downwardAPI","hostPath"]
node-exporter                     true    <no value>   RunAsAny    RunAsAny           RunAsAny    RunAsAny    <no value>   false            ["*"]
nonroot                           false   <no value>   MustRunAs   MustRunAsNonRoot   RunAsAny    RunAsAny    <no value>   false            ["configMap","downwardAPI","emptyDir","persistentVolumeClaim","projected","secret"]
privileged                        true    ["*"]        RunAsAny    RunAsAny           RunAsAny    RunAsAny    <no value>   false            ["*"]
restricted                        false   <no value>   MustRunAs   MustRunAsRange     MustRunAs   RunAsAny    <no value>   false            ["configMap","downwardAPI","emptyDir","persistentVolumeClaim","projected","secret"]
[student@workstation ~]$ oc describe scc restricted 
Name:						restricted
Priority:					<none>
Access:						
  Users:					<none>
  Groups:					system:authenticated
Settings:					
  Allow Privileged:				false
  Allow Privilege Escalation:			true
  Default Add Capabilities:			<none>
  Required Drop Capabilities:			KILL,MKNOD,SETUID,SETGID
  Allowed Capabilities:				<none>
  Allowed Seccomp Profiles:			<none>
  Allowed Volume Types:				configMap,downwardAPI,emptyDir,persistentVolumeClaim,projected,secret
  Allowed Flexvolumes:				<all>
  Allowed Unsafe Sysctls:			<none>
  Forbidden Sysctls:				<none>
  Allow Host Network:				false
  Allow Host Ports:				false
  Allow Host PID:				false
  Allow Host IPC:				false
  Read Only Root Filesystem:			false
  Run As User Strategy: MustRunAsRange		
    UID:					<none>
    UID Range Min:				<none>
    UID Range Max:				<none>
  SELinux Context Strategy: MustRunAs		
    User:					<none>
    Role:					<none>
    Type:					<none>
    Level:					<none>
  FSGroup Strategy: MustRunAs			
    Ranges:					<none>
  Supplemental Groups Strategy: RunAsAny	
    Ranges:					<none>
[student@workstation ~]$ # restricted -- least privileges
[student@workstation ~]$ oc get scc -o name
securitycontextconstraints.security.openshift.io/anyuid
securitycontextconstraints.security.openshift.io/hostaccess
securitycontextconstraints.security.openshift.io/hostmount-anyuid
securitycontextconstraints.security.openshift.io/hostnetwork
securitycontextconstraints.security.openshift.io/machine-api-termination-handler
securitycontextconstraints.security.openshift.io/node-exporter
securitycontextconstraints.security.openshift.io/nonroot
securitycontextconstraints.security.openshift.io/privileged
securitycontextconstraints.security.openshift.io/restricted
[student@workstation ~]$ oc describe scc privileged 
Name:						privileged
Priority:					<none>
Access:						
  Users:					system:admin,system:serviceaccount:openshift-infra:build-controller
  Groups:					system:cluster-admins,system:nodes,system:masters
Settings:					
  Allow Privileged:				true
  Allow Privilege Escalation:			true
  Default Add Capabilities:			<none>
  Required Drop Capabilities:			<none>
  Allowed Capabilities:				*
  Allowed Seccomp Profiles:			*
  Allowed Volume Types:				*
  Allowed Flexvolumes:				<all>
  Allowed Unsafe Sysctls:			*
  Forbidden Sysctls:				<none>
  Allow Host Network:				true
  Allow Host Ports:				true
  Allow Host PID:				true
  Allow Host IPC:				true
  Read Only Root Filesystem:			false
  Run As User Strategy: RunAsAny		
    UID:					<none>
    UID Range Min:				<none>
    UID Range Max:				<none>
  SELinux Context Strategy: RunAsAny		
    User:					<none>
    Role:					<none>
    Type:					<none>
    Level:					<none>
  FSGroup Strategy: RunAsAny			
    Ranges:					<none>
  Supplemental Groups Strategy: RunAsAny	
    Ranges:					<none>
[student@workstation ~]$ 
[student@workstation ~]$ oc get scc -o name
securitycontextconstraints.security.openshift.io/anyuid
securitycontextconstraints.security.openshift.io/hostaccess
securitycontextconstraints.security.openshift.io/hostmount-anyuid
securitycontextconstraints.security.openshift.io/hostnetwork
securitycontextconstraints.security.openshift.io/machine-api-termination-handler
securitycontextconstraints.security.openshift.io/node-exporter
securitycontextconstraints.security.openshift.io/nonroot
securitycontextconstraints.security.openshift.io/privileged
securitycontextconstraints.security.openshift.io/restricted
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get pods -n sscdemo 
NAME                     READY   STATUS             RESTARTS      AGE
nginx-6cb5cff86c-4zfxp   0/1     CrashLoopBackOff   7 (33s ago)   11m
[student@workstation ~]$ oc -n sscdemo logs pods/nginx-6cb5cff86c-4zfxp -o yaml  | oc adm policy  scc-subject-review -f - 
error: unknown shorthand flag: 'o' in -o
See 'oc logs --help' for usage.
[student@workstation ~]$ oc -n sscdemo logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy  scc-subject-review -f - 
error: unknown shorthand flag: 'o' in -o
See 'oc logs --help' for usage.
[student@workstation ~]$ oc project sccdemo
error: A project named "sccdemo" does not exist on "https://api.ocp4.example.com:6443".
Your projects are:
* common
* default
* kube-node-lease
* kube-public
* kube-system
* NFS Provisioner (nfs-client-provisioner)
* openshift
* openshift-apiserver
* openshift-apiserver-operator
* openshift-authentication
* openshift-authentication-operator
* openshift-cloud-controller-manager
* openshift-cloud-controller-manager-operator
* openshift-cloud-credential-operator
* openshift-cloud-network-config-controller
* openshift-cluster-csi-drivers
* openshift-cluster-machine-approver
* openshift-cluster-node-tuning-operator
* openshift-cluster-samples-operator
* openshift-cluster-storage-operator
* openshift-cluster-version
* openshift-config
* openshift-config-managed
* openshift-config-operator
* openshift-console
* openshift-console-operator
* openshift-console-user-settings
* openshift-controller-manager
* openshift-controller-manager-operator
* openshift-dns
* openshift-dns-operator
* openshift-etcd
* openshift-etcd-operator
* openshift-host-network
* openshift-image-registry
* openshift-infra
* openshift-ingress
* openshift-ingress-canary
* openshift-ingress-operator
* openshift-insights
* openshift-kni-infra
* openshift-kube-apiserver
* openshift-kube-apiserver-operator
* openshift-kube-controller-manager
* openshift-kube-controller-manager-operator
* openshift-kube-scheduler
* openshift-kube-scheduler-operator
* openshift-kube-storage-version-migrator
* openshift-kube-storage-version-migrator-operator
* openshift-machine-api
* openshift-machine-config-operator
* openshift-marketplace
* openshift-monitoring
* openshift-multus
* openshift-network-diagnostics
* openshift-network-operator
* openshift-node
* openshift-oauth-apiserver
* openshift-openstack-infra
* openshift-operator-lifecycle-manager
* openshift-operators
* openshift-ovirt-infra
* openshift-sdn
* openshift-service-ca
* openshift-service-ca-operator
* openshift-user-workload-monitoring
* openshift-vsphere-infra
* project4
* projectxtreme
* sridhar
* sridhar-2
* sridhar1
* sridharexample
* sscdemo
[student@workstation ~]$ oc project sscdemo
[student@workstation ~]$ oc project sscdemo
Already on project "sscdemo" on server "https://api.ocp4.example.com:6443".
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy  scc-subject-review -f - 
error: unknown shorthand flag: 'o' in -o
See 'oc logs --help' for usage.
[student@workstation ~]$ oc logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy scc-subject-review -f - 
error: unknown shorthand flag: 'o' in -o
See 'oc logs --help' for usage.
[student@workstation ~]$ oc get pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy scc-subject-review -f - 





















[student@workstation ~]$ oc get pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy scc-subject-review -f - 
RESOURCE                     ALLOWED BY   
Pod/nginx-6cb5cff86c-4zfxp   anyuid       
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc get sa
NAME       SECRETS   AGE
builder    2         18m
default    2         18m
deployer   2         18m
[student@workstation ~]$ oc get rolebinding -o wide 
NAME                    ROLE                               AGE   USERS       GROUPS                           SERVICEACCOUNTS
admin                   ClusterRole/admin                  19m   developer                                    
system:deployers        ClusterRole/system:deployer        19m                                                sscdemo/deployer
system:image-builders   ClusterRole/system:image-builder   19m                                                sscdemo/builder
system:image-pullers    ClusterRole/system:image-puller    19m               system:serviceaccounts:sscdemo   
[student@workstation ~]$ 
[student@workstation ~]$ oc create serviceaccount nginx-sa
serviceaccount/nginx-sa created
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ oc adm policy add-scc-to-user anyuid -z nginx-sa
clusterrole.rbac.authorization.k8s.io/system:openshift:scc:anyuid added: "nginx-sa"
[student@workstation ~]$ oc login -u developer -p developer
Login successful.

You have one project on this server: "sscdemo"

Using project "sscdemo".
[student@workstation ~]$ oc get deployment
NAME    READY   UP-TO-DATE   AVAILABLE   AGE
nginx   0/1     1            0           20m
[student@workstation ~]$ oc get deployment/nginx -o yaml | grep -i serviceAccount
[student@workstation ~]$ oc get sa
NAME       SECRETS   AGE
builder    2         24m
default    2         24m
deployer   2         24m
nginx-sa   2         3m26s
[student@workstation ~]$ # oc set serviceaccount deployment/nginx nginx-sa
[student@workstation ~]$ oc get pods 
NAME                     READY   STATUS             RESTARTS      AGE
nginx-6cb5cff86c-4zfxp   0/1     CrashLoopBackOff   9 (79s ago)   22m
[student@workstation ~]$ oc set serviceaccount deployment/nginx nginx-sa
deployment.apps/nginx serviceaccount updated
[student@workstation ~]$ 
[student@workstation ~]$ oc get deployment/nginx -o yaml | grep -i serviceAccount
      serviceAccount: nginx-sa
      serviceAccountName: nginx-sa
[student@workstation ~]$ oc get pods 
NAME                   READY   STATUS    RESTARTS   AGE
nginx-f9f8bc55-sltmg   1/1     Running   0          10s
[student@workstation ~]$ oc get all
NAME                       READY   STATUS    RESTARTS   AGE
pod/nginx-f9f8bc55-sltmg   1/1     Running   0          41s

NAME            TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE
service/nginx   ClusterIP   172.30.227.201   <none>        80/TCP    23m

NAME                    READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/nginx   1/1     1            1           23m

NAME                               DESIRED   CURRENT   READY   AGE
replicaset.apps/nginx-56b95959b7   0         0         0       23m
replicaset.apps/nginx-6cb5cff86c   0         0         0       23m
replicaset.apps/nginx-f9f8bc55     1         1         1       41s

NAME                                   IMAGE REPOSITORY                                                 TAGS     UPDATED
imagestream.image.openshift.io/nginx   image-registry.openshift-image-registry.svc:5000/sscdemo/nginx   latest   23 minutes ago
[student@workstation ~]$ oc expose svc/nginx 
route.route.openshift.io/nginx exposed
[student@workstation ~]$ oc get route 
NAME    HOST/PORT                             PATH   SERVICES   PORT     TERMINATION   WILDCARD
nginx   nginx-sscdemo.apps.ocp4.example.com          nginx      80-tcp                 None
[student@workstation ~]$ curl nginx-sscdemo.apps.ocp4.example.com
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
[student@workstation ~]$ touch /etc/myfile
touch: cannot touch '/etc/myfile': Permission denied
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ 
[student@workstation ~]$ history
    1  clear
    2  exit
    3  exit
    4  lab manage-lifecycle start
    5  podman login registry.redhat.io
    6  podman run --name mysql-db registry.redhat.io/rhel8/mysql-80:1
    7  podman logs mysql-db
    8  podman run --name mysql -d -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
    9  podman ps
   10   podman cp ~/DO180/labs/manage-lifecycle/db.sql mysql:/
   11  'mysql -uuser1 -pmypa55 items < /db.sql'
   12  podman run --name mysql-2 -it registry.redhat.io/rhel8/mysql-80:1 /bin/bash
   13   podman ps -a
   14  podman exec mysql /bin/bash -c 
   15  'mysql -uuser1 -pmypa55 -e "select * from items.Projects;"'
   16   podman exec mysql /bin/bash -c  'mysql -uuser1 -pmypa55 -e "select * from items.Projects;"'
   17  podman ps 
   18  podman exec -it mysql bash 
   19   podman exec mysql /bin/bash -c  'mysql -uuser1 -pmypa55 -e "select * from items.Projects;"'
   20  lab manage-lifecycle finish
   21  help
   22  help Administration
   23  help administration
   24   lab manage-storage start
   25   mkdir -vp /home/student/local/mysql
   26  sudo semanage fcontext -a -t container_file_t '/home/student/local/mysql(/.*)?'
   27  sudo restorecon -R /home/student/local/mysql
   28  ls -ldZ /home/student/local/mysql
   29  podman unshare chown 27:27 /home/student/local/mysql
   30  podman login registry.redhat.io
   31  podman pull registry.redhat.io/rhel8/mysql-80:1
   32   podman run --name persist-db -d -v /home/student/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55  -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
   33  registry.redhat.io/rhel8/mysql-80:1
   34  podman ps --format="{{.ID}} {{.Names}} {{.Status}}"
   35  ls -ld /home/student/local/mysql/items
   36  podman unshare ls -ld /home/student/local/mysql/items
   37  lab manage-storage finish
   38  lab manage-networking start
   39   podman login registry.redhat.io
   40  podman run --name mysqldb-port \ -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 \ -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 \ -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 \ registry.redhat.io/rhel8/mysql-80:1
   41  podman run --name mysqldb-port -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
   42  podman ps --format="{{.ID}} {{.Names}} {{.Ports}}"
   43  mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-networking/db.sql
   44   podman exec -it mysqldb-port  mysql -uroot items -e "SELECT * FROM Item"
   45  mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "SELECT * FROM Item"
   46   podman exec -it mysqldb-port /bin/bash
   47  lab manage-networking finish
   48  lab image-operations start
   49  podman login quay.io
   50   podman run -d --name official-httpd -p 8180:80 quay.io/redhattraining/httpd-parent
   51  podman exec -it official-httpd /bin/bash
   52  curl 127.0.0.1:8180/do180.html
   53  podman diff official-httpd
   54  podman stop official-httpd
   55  podman commit -a 'Your Name' official-httpd do180-custom-httpd
   56  podman images
   57  source /usr/local/etc/ocp4.config
   58  podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   59  podman tag do180-custom-httpd
   60  podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   61  podman images 
   62  cat /usr/local/etc/ocp4.config 
   63  lab-configure 
   64  cat /usr/local/etc/ocp4.config 
   65  source /usr/local/etc/ocp4.config
   66  echo ${RHT_OCP4_QUAY_USER}
   67  podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   68  podman images 
   69  podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   70  podman pull -q quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   71  podman run -d --name test-httpd -p 8280:80 ${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
   72  curl http://localhost:8280/do180.html
   73  lab image-operations finish
   74  lab dockerfile-create start
   75  vim ~/DO180/labs/dockerfile-create/Containerfile
   76   cd ~/DO180/labs/dockerfile-create
   77  -t do180/apache .
   78  podman build --layers=false -t do180/apache .
   79  vim Containerfile 
   80  podman build --layers=false -t do180/apache .
   81  podman search registry.access.redhat.com/ubi8
   82  vim Containerfile 
   83  podman build --layers=false -t do180/apache .
   84  vim Containerfile 
   85  ls
   86  mkdir src 
   87  vim Containerfile 
   88  echo "testfile" > src/testfile 
   89  podman build --layers=false -t do180/apache .
   90  podman images 
   91  podman run -d -p 10080:80 do180/apache:latest 
   92  curl localhost:10080
   93  podman ps 
   94  podman ps -a
   95  podman logs laughing_antonelli 
   96  vim Containerfile 
   97  podman rm laughing_antonelli 
   98  podman build --layers=false -t do180/apache .
   99  podman images
  100  podman run --name lab-apachee exit
  101  podman run --name lab-apache do180/apache
  102  podman ps -a
  103  podman logs lab-apache 
  104  podman run --name lab-apache do180/apache
  105  vim Containerfile
  106  podman run --name lab-apache do180/apache
  107  podman ps
  108  lab dockerfile-create start
  109  clear
  110  cd ~/DO180/labs/dockerfile-create/
  111  ls
  112  vim Containerfile
  113  ls -l
  114  podman build --layers=false  -t do180/apache ~/DO180/labs/dockerfile-create
  115  podman images
  116  podman ps -a
  117  podman rm *
  118  podman rm baf6
  119  podman ps -a
  120  podman images
  121  podman rmi 613e
  122  podman images
  123  podman rm -a
  124  podman rmi -a
  125  podman images
  126  podman ps -a
  127  podman build --layer=false -t do180/apache .
  128  podman build --layers=false -t do180/apache .
  129  podman images
  130  podman ps -a
  131  podman push localhost/do180/apache
  132  podman push quay.io/snagraj1987/localhost/do180/apache
  133  podman run --name Sriweb -d -p 10080:80 do180/apache
  134  podman ps -a
  135  curl localhost:80
  136  curl localhost:10080
  137  podman login quay.io
  138  podman push quay.io/do180/apache
  139  podman push docker://quay.io/do180/apache
  140  cd ~/DO180/labs/dockerfile-review
  141  lab dockerfile-review start
  142  cd ~/DO180/labs/dockerfile-review
  143  ls
  144  vim containerfile
  145  exit
  146  oc login -u admin -p redhat https://api.ocp4.example.com:6443
  147  podman images
  148  podman login quay.io
  149  podman tag do180/apache:latest quay.io/snagraj1987/apache:latest
  150  podman images
  151  podman push quay.io/snagraj1987/apache:latest
  152  oc whoaim
  153  oc whoami
  154  oc whoami -t
  155  oc project
  156  oc whoami --show-console
  157  oc get ns | grep sridhar
  158  oc get project | grep sridhar
  159  oc new-project -h 
  160  oc new-project -h sridhar1
  161  oc new-project sridhar1
  162  oc login -u admin -p redhat
  163  oclogin login -u admin -p redhat
  164  oc login login -u admin -p redhat
  165  oc login -u admin -p redhat
  166  oc whoami --show-console
  167  oc get ns | grep sridhar
  168  oc get project | grep sridhar
  169  oc get project
  170  oc login -u admin -p redhat https://api.ocp4.example.com:6443
  171  oc whoami --show-console
  172  oc get all
  173  oc describe svc/do-180-sridhar
  174  ip addr.show
  175  oc get svc
  176  oc edit svc/do-180-sridhar
  177  oc describe svc/do-180-sridhar
  178  curl master01.ocp4.example.com:30591
  179  curl master01.ocp4.example.com:31293
  180  curl master02.ocp4.example.com:31293
  181  curl master03.ocp4.example.com:31293
  182  oc edit svc/do-180-sridhar
  183  oc new-project Example-project4
  184  oc new-project project4
  185  oc get all
  186  oc get sa
  187  oc get secret
  188  oc new-app --name=secureapp --docker-image=quay.io/redhattraining/hello-world-nginx-v1.0
  189  oc get all
  190  clear
  191  oc new-proect sridharexample
  192  oc new-project sridharexample
  193  oc get all
  194  oc get sa
  195  oc get secrets
  196  oc new-app --name=secureapp --docker-image=quay.io/redhattraining/hello-world-nginx:v1.0
  197  oc get all
  198  oc exec -it pod/secureapp-586bcb5df6-scdzv /bin/bash
  199  oc exec -it pod/secureapp-586bcb5df6-6cdzv /bin/bash
  200  sudo mandb -q
  201  ls /etc/pki/tls/certs/
  202  whatis openssl
  203  man -k openssl
  204  ls
  205  man openssl-req
  206  openssl ogpeennrsssal  -goeuntr seax a-mopulte .ekxeaym p2l0e4.8key 2048
  207  openssl genrsa -out example.key 2048
  208  openssl req -new -key example.key -out example.csr
  209  clear
  210  oc new-project projectxtreme
  211  oc get all
  212  oc get sa
  213  oc new-app --name=secureapp1 --docker-image=quay.io/redhattraining/hello-world-nginx:v1.0
  214  oc get all
  215  oc exec -it pod/secureapp1-5b6c4567b6-xj927 /bin/bash
  216  oc expose svc/secureapp1
  217  oc get route
  218  curl secureapp1-projectxtreme.apps.ocp4.example.com
  219  oc create secret generic app-secret --from-literal=MESSAGE=Hello
  220  oc get secret
  221  oc get secret/app-secret -o yaml
  222  echo "SGVsbG8=" | base64 -d 
  223  oc get cm
  224* oc create cm myappconfig --from-lite
  225  oc get cm
  226  oc get cm/myappconfig -o yaml  
  227  oc get deployment
  228  oc describe deployment secureapp1
  229  oc set env -h
  230  oc get deployment, secret, cm
  231  oc get deployment,secret,cm
  232  # oc set env deployment/secureapp1 --from=secret/app-secret 
  233  oc get pods 
  234  oc set env deployment/secureapp1 --from=secret/app-secret 
  235  oc get pods 
  236  oc get pods -w
  237  oc describe deployment secureapp1
  238  oc get pods 
  239* oc exec secureapp1-5f86b75dc5-9smgs -- env | grep MESSAGEoc
  240  oc set env deployment/secureapp1 --from=configmap/myappconfig 
  241  oc get pod
  242  oc describe deployment secureapp1
  243  oc exec secureapp1-7cb65b8f54-xrbrh -- env
  244  oc edit deployment/secureapp1
  245  oc describe deployment
  246  oc set volume -h 
  247  oc get secret/app-secret 
  248  oc get cm 
  249  oc set volume deployment/secureapp1 --add --type=secret --secret-name=app-secret --mount-path=/app-secret 
  250  oc get pods
  251  oc describe deployment
  252  oc get pods
  253  oc get deployment
  254  oc exec deployment/secureapp1
  255  oc exec deployment/secureapp1 /bin/bash
  256  oc exec -it deployment/secureapp1 /bin/bash
  257  oc set volume deployment/secureapp1 --add --name=myconfigvol --type=configmap --configmap-name=myappconfig --mount-path=/some-config 
  258  oc get pods 
  259  oc describe deployment
  260  oc exec -it deployment/secureapp1 /bin/bash
  261  oc edit deployment/secureapp1
  262  oc get cm 
  263  oc login -u developer -p developer 
  264  oc new-project sscdemo
  265  oc new-app --docker-image=docker.io/nginx:latest
  266  oc get status
  267  oc get
  268  oc get all
  269  oc logs nginx-6cb5cff86c-4zfxp 
  270  # In kubernetes, PSP (Pod Security Policy)
  271  # In openShift, Security Context Constraints (SCC)
  272  oc get scc
  273  oc login -u admin -p redhat 
  274  oc get scc
  275  oc describe scc restricted 
  276  # restricted -- least privileges
  277  oc get scc -o name
  278  oc describe scc privileged 
  279  oc get scc -o name
  280  oc get pods -n sscdemo 
  281  oc -n sscdemo logs pods/nginx-6cb5cff86c-4zfxp -o yaml  | oc adm policy  scc-subject-review -f - 
  282  oc -n sscdemo logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy  scc-subject-review -f - 
  283  oc project sccdemo
  284  oc project sscdemo
  285  oc logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy  scc-subject-review -f - 
  286  oc logs pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy scc-subject-review -f - 
  287  oc get pods/nginx-6cb5cff86c-4zfxp -o yaml | oc adm policy scc-subject-review -f - 
  288  oc get sa
  289  oc get rolebinding -o wide 
  290  oc create serviceaccount nginx-sa
  291  oc adm policy add-scc-to-user anyuid -z nginx-sa
  292  oc login -u developer -p developer
  293  oc get deployment
  294  oc get deployment/nginx -o yaml | grep -i serviceAccount
  295  oc get sa
  296  # oc set serviceaccount deployment/nginx nginx-sa
  297  oc get pods 
  298  oc set serviceaccount deployment/nginx nginx-sa
  299  oc get deployment/nginx -o yaml | grep -i serviceAccount
  300  oc get pods 
  301  oc get all
  302  oc expose svc/nginx 
  303  oc get route 
  304  curl nginx-sscdemo.apps.ocp4.example.com
  305  touch /etc/myfile
  306  history
[student@workstation ~]$ 

